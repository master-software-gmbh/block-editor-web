import { o as E } from "./main-D94eW5XA.js";
import { BlockEditor as f } from "./editor.min.js";
function y(e, d = "app", i = "cms-document") {
  var a, l, r, c, s, p;
  const t = document.getElementById(d), n = (a = document.getElementById(i)) == null ? void 0 : a.textContent;
  if (!t)
    throw new Error("Container not found");
  if (!n)
    throw new Error("Content not found");
  const m = JSON.parse(n);
  let o;
  (l = e.callbacks) != null && l.onSave ? o = e.callbacks.onSave : e.saveEndpoint ? o = async (u) => {
    await fetch(e.saveEndpoint, {
      method: "PUT",
      body: JSON.stringify(u),
      headers: {
        "Content-Type": "application/json"
      }
    });
  } : o = async () => {
    console.error("No save endpoint or callback provided");
  }, E({
    provide: {
      data: m,
      config: {
        features: {
          fileUpload: ((r = e.features) == null ? void 0 : r.fileUpload) ?? !1
        },
        callbacks: {
          onSave: o,
          onExit: ((c = e.callbacks) == null ? void 0 : c.onExit) ?? (() => {
          }),
          getFileSourceUrl: (s = e.callbacks) == null ? void 0 : s.getFileSourceUrl,
          onUpload: (p = e.callbacks) == null ? void 0 : p.onUpload
        }
      }
    },
    components: {
      BlockEditor: f
    },
    template: `
      <BlockEditor />
    `
  }).mount(t);
}
export {
  y as setupEditor
};
